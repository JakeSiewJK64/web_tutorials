// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  categoryName        String    @id @db.VarChar(255)
  categoryDescription String    @db.Text
  pokemon             Pokemon[]

  @@map("category")
}

model Ability {
  abilityId          Int      @id @unique @default(autoincrement())
  abilityName        String   @unique @db.VarChar(255)
  abilityDescription String   @db.VarChar(255)
  pokemonId          Int
  pokemon            Pokemon? @relation(fields: [pokemonId], references: [pokemonId])

  @@map("ability")
}

model Habitat {
  habitatName        String    @id @unique
  habitatDescription String
  pokemon            Pokemon[]

  @@map("habitat")
}

model Pokemon {
  pokemonId        Int                @id @unique @default(autoincrement())
  pokemonName      String             @unique @db.VarChar(255)
  damage           Float
  defence          Float
  health           Float
  categoryName     String
  habitatName      String
  abilityId        Int?
  habitat          Habitat            @relation(fields: [habitatName], references: [habitatName])
  category         Category           @relation(fields: [categoryName], references: [categoryName])
  ability          Ability[]
  weakness         Weakness[]
  resistance       Resistance[]
  PokemonOwnership PokemonOwnership[]

  @@map("pokemon")
}

model Resistance {
  resistanceId   Int     @id @unique @default(autoincrement())
  resistanceType String
  pokemonId      Int
  pokemon        Pokemon @relation(fields: [pokemonId], references: [pokemonId])
  type           Type    @relation(fields: [resistanceType], references: [type])

  @@map("resistance")
}

model Weakness {
  weaknessId Int     @id @unique @default(autoincrement())
  pokemonId  Int
  typeName   String
  pokemon    Pokemon @relation(fields: [pokemonId], references: [pokemonId])
  type       Type    @relation(fields: [typeName], references: [type])

  @@map("weakness")
}

model Trainer {
  trainerId        Int                @unique @default(autoincrement())
  trainerFirstName String             @db.VarChar(255)
  trainerLastName  String             @db.VarChar(255)
  gender           String             @db.VarChar(1)
  trainerLevel     Float
  pokemonRelation  PokemonOwnership[]

  @@map("trainer")
}

model PokemonOwnership {
  ownershipId Int     @id @unique @default(autoincrement())
  trainerId   Int
  pokemonId   Int
  trainer     Trainer @relation(fields: [trainerId], references: [trainerId])
  pokemon     Pokemon @relation(fields: [pokemonId], references: [pokemonId])

  @@map("pokemonOwnership")
}

model Type {
  type            String       @id @unique @db.VarChar(255)
  typeDescription String       @db.VarChar(255)
  weakness        Weakness[]
  resistance      Resistance[]

  @@map("type")
}
